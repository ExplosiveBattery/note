在线病毒检测：
http://www.virscan.org/
	0.免杀只是一门被广泛用于以防止病毒木马被查杀为目的的技术。如果用于正途的话就是软件保护以及防止特殊工具被误杀，现在容易想到的是花指令防止反汇编）。所以把免杀叫做软件保护比较好。
	1.成千上百个灰鸽子的变种
	2.免杀还可以通过改变行为（或许这是指对于行为检测的免杀），甚至加入RootKit、 Anti RootKit代码。
	  RootKit是专门用于隐藏的工具，所以还是不同于免杀的，它可以用于免杀。杀软也用了rootkit。
	4.加密解密技术是对于某一个程序展开研究，而免杀是几个进程（几个程序）之间的较量。
	5.目前病毒与木马的发展趋势：一.有着更加强大的功能：引入人工智能、云计算等技术思想；二.脱离系统，转攻硬件，例如将后门安装在BIOS或者某处固件中，甚至是处理器的微代码。
	6.花指令：核心思想是扰乱程序的执行顺序，并为尝试明白软件的人设下陷阱。
为了获得控制权，病毒可以有以下几种修改可执行文件的方法：
―修改entry-point（程序入口）字段使之指向病毒代码
―在程序代码中插入一个指向病毒代码的跳转指令
第一个方法很简单，但是现在几乎所有不错的杀毒软件都会把这样的被感染文件看成是可疑文件。
为什么？因为一个程序的入口指针在代码段以外，所以这至少是可疑的。之后演变成为扫描入口点附近看有没有指向代码段外面的跳转指令。于是我们加上足够的花指令（书上也说了这对单单第一代扫描技术才会有不错的免杀），反正就是把跳转函数移动到后面去。也就是第二种方法。
	 对于不同的反汇编算法，有的并不是很好，一加花指令就会导致后面指令的识别全部出错。不过有些时候加上花指令就会导致不遵守Intel 的OCP规则，然后执行的时候也会导致错误。联系病毒的拆分存放，我想到一种：就是让真正的规则都解析不出来，对于这种无法识别的程序，我们使用另一个程序来纠正。从而达到文件层面的免杀。还有一种不就是直接加了一个虚拟机的壳。花指令对线性扫描反汇编算法的杀伤大。相比线性扫描算法，行进递归算法通过程序的控制流来确定反汇编的下一条指令，遇到非控制转移指令时顺序进行反汇编，而遇到控制转移指令时则从转移地址处开始进行反汇编。行进递归算法的缺点在于准确确定间接转移目的地址的难度较大。
	 要想消灭花指令的话就要可以识别出无效果的数据或者指令，然后去除。
	7.有这么一种注射器程序，是调用VituralAlloc来分配可读可写可执行内存，然后你就可以将你的代码注射进去，同时他会自动提供一个SEH（a Structured Exception Handler (SEH) block）来处理程序运行中的异常，确保程序可以正常运行。
	8.360会检测用户进入目录下的危险格式文件
	9.内核Shellcode的功能有如下两个：1）结束指定杀软进程，包括kxetray.exe、kxescore.exe、QQPcTray.exe，由于管家的进程有object钩子防护，因此不会被干掉。2）遍历进程，如果进程名为以下之一，则将尾部的应用层Shellcode 以apc的方式插入到该进程中，插入一个进程后便退出遍历，不再插其他进程。具体进程列表如下：360tray.exe、360safe.exe、360sd.exe、360rp.exe、zhudongfangyu.exe、QQPcRtp.exe、KSafeSvc.exe、KSafeTray.exe、BaiduSdTray.exe、BaiduAnTray.exe、BadduAnSvc.exe、BaiduHips.exe、BaiduProtect.exe、wscntfy.exe、spoolsv.exe、alg.exe，以上进程名均硬编码于Shellcode中。
	10.加密文件的节表。
	11.PE文件结构的总体层次分布如下所示
 -----------------------
|DOS MZ Header |
|------------------------|
|DOS Stub     |
|------------------|
|PE Header   |
|------------------|
|Section Table |
|------------------|
|Section 1      |
|------------------|
|Section 2      |
|------------------|
|Section ...   |
|--------------|
|Section n     |
 --------------
	12.PE病毒的感染原理和方法
1) 获取kernel32.dll的基地址。
2) 通过所获得的kernel32的基地址通过dll的PE文件格式中的输出表获得以后要使用到的API的地址，并将他们存放在变量或是栈中，将来所调用的API直接通过CALL这些地址来实现。
3) 查找要感染的文件并获得他们的基地址(通过CreateFile,CreateFileMapping,ViewOfMapFile将文件打开，当然调用的是getapi所找到的地址。其他过程和一般的程序没什么区别，所以就不写在这里了)。
4) 通过获得的文件的基地址来根据文件的PE文件格式来将病毒代码注入到该文件中。
	13.在PE Header结构中的OptionalHeader结构中的成员FileAlignment的值是文件中节的对齐度，单位是字节，这个值应该是2的n次 方，范围从512到64k。一般默认是512字节。如果一个节的内容不够就会使用00进行填充，这时候就会有一大部分00区域，这也就是我们注入利用的区域。不过也有自己调用内存分配函数，，在PE执行的时候给自己分配一块足够的内存来执行自己的程序。以及可以是通过给程序末尾添加一个节( section )来将代码写入，这时候只需要对PE结构头重新修改定位就好。
	PE的代码映象分为几个SECTION，在文件中会对齐页边界（4K）。一般来说，文件会加载在400000h开始的空间，而第一个SECTION在401000h处，同时入口地址也是401000h。由高级语言编写的程序， 每个SECTIO-N的长度不可能刚好是4K的倍数，因此在SECTION的末尾将会存在一段未用的空间，大小可由Section的PHYSICAL SIZE－VIRTUALSIZE得到，在文件中起始位置可由 PHYSICAL OFFSET得到，这段空间可以用来存放病毒代码。此外一般来说，MZ Header+DOS STUD+PEHEADER+OPTIONAL HEADER+SECTION TABLE不过1K左右，而SECTION 1由4K开始，空出来的地方足够存放一个设计精良的病毒。CIH就是将代码存放在这些空闲空间里。
	14.杀毒软件使用的特征码都是异常复杂的，一般都是数段特征片段加上一定的逻辑组成的
	15.区段加密
	16.

常见的杀毒软件进程：
Smc.exe 赛门铁克